{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/AddPlacePopup.js","components/EditAvatarPopup.js","components/ConfirmPopup.js","utils/api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","headerLogo","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isLiked","likes","some","i","_id","cardLikeButtonClassName","isOwn","owner","cardDeleteButtonClassName","type","onClick","link","name","length","Main","cards","onEditAvatar","onEditProfile","onAddPlace","avatar","about","map","Footer","Date","getFullYear","ImagePopup","onClose","id","PopupWithForm","isOpen","onSubmit","title","captionButton","popupName","formName","children","value","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","evt","preventDefault","placeholder","minLength","maxLength","onChange","target","required","AddPlacePopup","cardName","setCardName","cardLink","setCardLink","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","ConfirmPopup","api","config","this","_url","url","_headers","headers","res","ok","json","Promise","reject","status","fetch","method","then","statusResponse","data","body","JSON","stringify","profession","authorization","App","isEditProfilePopupOpen","setIsOpenPopupProfile","isAddPlacePopupOpen","setIsOpenPopupPlace","isEditAvatarPopupOpen","setIsOpenPopupAvatar","isImagePopupOpen","setIsOpenPopupImage","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","deletedCard","setDeletedCard","handleOverlayClose","classList","contains","closeAllPopups","handleEscClose","key","document","removeEventListener","all","getUserData","getInitialCards","UserData","InitialCards","catch","error","console","Provider","addEventListener","putLike","newCard","newCards","c","addNewPlace","updateUserAvatar","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eaf8395e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a307e1c4.svg\";","import React from \"react\";\nimport headerLogo from \"../images/logo.svg\"\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <img className=\"header__logo\" src={headerLogo} alt=\"Логотип\" />\n        </header>\n    )\n}\n\nexport default Header","import React from \"react\";\n\nconst CurrentUserContext = React.createContext();\n\nexport default CurrentUserContext","import React from \"react\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\n\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\n    const currentUser = React.useContext(CurrentUserContext)\n\n    const isLiked = card.likes.some((i) => i._id === currentUser._id)\n    const cardLikeButtonClassName = (\n        `button button_type_like-card ${isLiked ? \"button_type_like-card-active\" : \"\"}`\n    )\n\n    const isOwn = card.owner._id !== currentUser._id\n    const cardDeleteButtonClassName = (\n        `button button_type_trash-card ${isOwn ? \"button_type_trash-card-hidden\" : \"\"}`\n    )\n \n    function handleClick() {\n        onCardClick(card)\n    }\n\n    function handleLikeClick() {\n        onCardLike(card)\n    }\n\n    function handleDeleteClick() {\n        onCardDelete(card)\n    }\n\n    return (\n        <li className=\"card__item\">\n            <button \n                type=\"button\" \n                className={cardDeleteButtonClassName} \n                onClick={handleDeleteClick}\n            />\n            <img \n                className=\"card__image\" \n                src={card.link} \n                alt={card.name} \n                onClick={handleClick} \n            />\n            <div className=\"card__description\">\n                <h2 className=\"card__title\">{card.name}</h2>\n                <div>\n                    <button\n                        type=\"button\" \n                        className={cardLikeButtonClassName}\n                        onClick={handleLikeClick} \n                    />\n                    <div className=\"card__counter-likes\">{card.likes.length}</div>\n                </div>\n            </div>\n        </li>\n    )\n}\n\nexport default Card","import React from \"react\";\nimport Card from \"./Card.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\n\nfunction Main({ cards, onEditAvatar, onEditProfile, onAddPlace, onCardClick, onCardLike, onCardDelete }) {\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div \n                    className=\"profile__avatar-container\" \n                    onClick={onEditAvatar}>\n                    <img \n                        className=\"profile__avatar\" \n                        src={currentUser.avatar} \n                        alt=\"Аватар\" \n                    />\n                </div>\n                <div className=\"profile__content\">\n                    <div className=\"profile__info\">\n                        <h1 className=\"profile__name\">{currentUser.name}</h1>\n                        <p className=\"profile__profession\">{currentUser.about}</p>\n                    </div>\n                    <button \n                        type=\"button\" \n                        className=\"button button_type_edit-profile\" \n                        onClick={onEditProfile} \n                    />\n                </div>\n                <button \n                    type=\"button\" \n                    className=\"button button_type_add-gallery\" \n                    onClick={onAddPlace} \n                />\n            </section>\n\n            <section className=\"gallery\">\n                <ul className=\"cards\">\n                    {cards.map((card) => (\n                        <Card \n                            key={card._id}\n                            card={card} \n                            onCardClick={onCardClick} \n                            onCardLike={onCardLike}\n                            onCardDelete={onCardDelete}\n                        />\n                        )\n                    )}\n                </ul>\n            </section>\n        </main>\n    )\n}\n\nexport default Main","import React from \"react\";\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__content\">{`© ${new Date().getFullYear()} Mesto Russia`}</p>\n        </footer>\n    )\n}\n\nexport default Footer","function ImagePopup({ card, onClose, onClick }) {\n\n    return (\n        <section className={`popup popup_type_card ${card && \"popup_is-opened\"}`} onClick={onClick}>\n            <div className=\"popup__container-card\">\n                <button \n                    type=\"button\" \n                    id=\"close-card\" \n                    className=\"button button_type_close-popup button_type_close-popup-card\" \n                    onClick={onClose} \n                />\n                <img \n                    className=\"popup__image-card\" \n                    src={card ? card.link : \"\"} \n                    alt={`${card ? card.name : \"\"}`}\n                />\n                <h2 className=\"popup__title popup__title_type_card\">{card ? card.name : \"\"}</h2>\n            </div>\n        </section>\n    )\n}\n\nexport default ImagePopup","import React from \"react\";\n\nfunction PopupWithForm({ isOpen, onClose, onClick, onSubmit, title, captionButton, popupName, formName, children }) {\n\n    return (\n        <section className={`popup popup_type_${popupName} ${isOpen ? \"popup_is-opened\" : \"\"}`} onClick={onClick}>\n            <form className={`popup__form popup__form_type_${formName}`} onSubmit={onSubmit}>\n                <button \n                    type=\"button\" \n                    className={`button button_type_close-popup button_type_close-popup-${popupName}`} \n                    onClick={onClose} \n                />\n                <h2 className=\"popup__title\">{title}</h2>\n                {children}\n                <button \n                    type=\"submit\" \n                    value=\"Создать\" \n                    className={`button button_type_save-popup button_type_save-popup-${popupName}`}>{captionButton}\n                </button>\n            </form>\n        </section>\n    )\n}\n\nexport default PopupWithForm","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\n\nfunction EditProfilePopup({isOpen, onClose, onClick, onUpdateUser}) {\n    const currentUser = React.useContext(CurrentUserContext)\n    const [name, setName] = React.useState(\"\")\n    const [description, setDescription] = React.useState(\"\")\n\n    React.useEffect(() => {\n        if(isOpen) {\n            setName(currentUser.name)\n            setDescription(currentUser.about)\n        }\n    }, [currentUser, isOpen])\n\n    function handleInputChangeName(evt) {\n        setName(evt.target.value)\n    }\n\n    function handleInputChangeDescription(evt) {\n        setDescription(evt.target.value)\n    }\n\n    function handleSubmit(evt) {\n        evt.preventDefault();\n      \n        onUpdateUser({\n          name,\n          about: description\n        })\n      }\n\n      return (\n        <PopupWithForm\n            isOpen={isOpen}\n            onClose={onClose}\n            onClick={onClick}\n            onSubmit={handleSubmit}\n            title=\"Редактировать профиль\"\n            captionButton=\"Сохранить\"\n            popupName=\"profile\"\n            formName=\"profile\"\n        >\n            <input\n                className=\"popup__subtitle popup__subtitle_type_profile\"\n                type=\"text\" \n                name=\"name\" \n                id=\"name\" \n                placeholder=\"Имя\"\n                minLength=\"2\" \n                maxLength=\"40\"\n                onChange={handleInputChangeName}\n                value={name ? name : \"\"}\n                required\n            />\n            <span id=\"name-error\" className=\"error\" />\n\n            <input\n                className=\"popup__subtitle popup__subtitle_type_profile\" \n                type=\"text\" \n                name=\"profession\" \n                id=\"profession\" \n                placeholder=\"О себе\" \n                minLength=\"2\" \n                maxLength=\"200\"\n                onChange={handleInputChangeDescription}\n                value={description ? description : \"\"}\n                required \n            />\n            <span id=\"profession-error\" className=\"error\" />\n\n        </PopupWithForm>\n      )\n}\n\nexport default EditProfilePopup","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm.js\";\n\nfunction AddPlacePopup({ isOpen, onClose, onClick, onAddPlace }) {\n    const [cardName, setCardName] = React.useState(\"\")\n    const [cardLink, setCardLink] = React.useState(\"\")\n\n    React.useEffect(() => {\n        if(isOpen) {\n            setCardName(\"\")\n            setCardLink(\"\")\n        }\n    }, [isOpen])\n\n    function handleInputChangeCardName(evt) {\n        setCardName(evt.target.value)\n    }\n\n    function handleInputChangeCardLink(evt) {\n        setCardLink(evt.target.value)\n    }\n\n    function handleSubmit(evt) {\n        evt.preventDefault();\n      \n        onAddPlace({\n          name: cardName,\n          link: cardLink\n        })\n      }\n\n\n      return (\n        <PopupWithForm\n            isOpen={isOpen}\n            onClose={onClose}\n            onClick={onClick}\n            onSubmit={handleSubmit}\n            title=\"Новое место\"\n            captionButton=\"Создать\"\n            popupName=\"gallery\"\n            formName=\"gallery\"\n        >\n            <input \n                className=\"popup__subtitle popup__subtitle_type_gallery\" \n                type=\"text\" \n                name=\"name_card\" \n                id=\"name-card\" \n                placeholder=\"Название\" \n                minLength=\"2\" \n                maxLength=\"30\" \n                onChange={handleInputChangeCardName}\n                value={cardName}\n                required \n            />\n            <span id=\"name-card-error\" className=\"error\" />\n\n            <input \n                className=\"popup__subtitle popup__subtitle_type_gallery\" \n                type=\"url\" \n                name=\"link_card\" \n                id=\"link-card\" \n                placeholder=\"Ссылка на картинку\" \n                onChange={handleInputChangeCardLink}\n                value={cardLink}\n                required \n            />\n            <span id=\"link-card-error\" className=\"error\" />\n\n    </PopupWithForm>\n      )\n}\n\nexport default AddPlacePopup","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm.js\";\n\nfunction EditAvatarPopup({ isOpen, onClose, onClick, onUpdateAvatar }) {\n    const avatarRef = React.useRef()\n\n    React.useEffect(() => {\n        if(isOpen) {\n            avatarRef.current.value = \"\"\n        }\n    }, [isOpen])\n\n    function handleSubmit(evt) {\n        evt.preventDefault();\n      \n        onUpdateAvatar({\n          avatar: avatarRef.current.value\n        })\n      }\n\n    return (\n        <PopupWithForm\n            isOpen={isOpen}\n            onClose={onClose}\n            onSubmit={handleSubmit}\n            onClick={onClick}\n            title=\"Обновить аватар\"\n            captionButton=\"Сохранить\"\n            popupName=\"avatar\"\n            formName=\"avatar\"\n        >\n            <input\n                className=\"popup__subtitle popup__subtitle_type_avatar\"\n                type=\"url\"\n                name=\"link_avatar\"\n                id=\"link-avatar\"\n                ref={avatarRef}\n                placeholder=\"Ссылка на аватар\"\n                required\n            />\n            <span id=\"avatar-error\" className=\"error\" />\n\n        </PopupWithForm>\n    )\n}\n\nexport default EditAvatarPopup","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction ConfirmPopup({ isOpen, onClose, onClick, onCardDelete, card}) {\n    function handleCardDelete(evt) {\n        evt.preventDefault()\n        onCardDelete(card)\n    }\n\n    return (\n        <PopupWithForm\n            isOpen={isOpen}\n            onClose={onClose}\n            onClick={onClick}\n            onSubmit={handleCardDelete}\n            title=\"Вы уверены?\"\n            captionButton=\"Да\"\n            popupName=\"confirm\"\n            formName=\"confirm\"\n        />\n    )\n}\n\nexport default ConfirmPopup","class Api {\n    constructor(config) {\n        this._url = config.url;\n        this._headers = config.headers;\n    }\n\n    statusResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`)\n    }\n\n    getUserData() {\n        return fetch(`${this._url}/users/me`, {\n            method: \"GET\",\n            headers: this._headers\n        })\n        .then(this.statusResponse)\n    }\n\n    getInitialCards() {\n        return fetch(`${this._url}/cards`, {\n            method: \"GET\",\n            headers: this._headers\n        })\n        .then(this.statusResponse)\n    }\n\n    updateUserData(data) {\n        return fetch(`${this._url}/users/me`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                about: data.profession\n            })\n        })\n        .then(this.statusResponse)\n    }\n    \n    addNewPlace(data) {\n        return fetch(`${this._url}/cards`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        })\n        .then(this.statusResponse)\n    }\n\n    deleteCard(_id) {\n        return fetch(`${this._url}/cards/${_id}`, {\n            method: \"DELETE\",\n            headers: this._headers\n        })\n        .then(this.statusResponse)\n    }\n\n    putLike(card, isLiked) {\n        return fetch(`${this._url}/cards/likes/${card}`, {\n            method: isLiked ? \"DELETE\" : \"PUT\",\n            headers: this._headers\n        })\n        .then(this.statusResponse)\n    }\n\n    updateUserAvatar(data) {\n        return fetch(`${this._url}/users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: data.avatar\n            })\n        })\n        .then(this.statusResponse)\n    }\n}\n\nconst api = new Api ({\n    url: \"https://mesto.nomoreparties.co/v1/cohort-18\",\n    headers: {\n        authorization: \"ee7d3d7a-088a-4faf-a6a4-125e05d2a819\",\n        \"Content-Type\": \"application/json\"\n    }\n});\n\nexport default api","import React from \"react\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport ConfirmPopup from \"./ConfirmPopup.js\";\nimport api from \"../utils/api.js\"\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsOpenPopupProfile] = React.useState(false)\n    const [isAddPlacePopupOpen, setIsOpenPopupPlace] = React.useState(false)\n    const [isEditAvatarPopupOpen, setIsOpenPopupAvatar] = React.useState(false)\n    const [isImagePopupOpen, setIsOpenPopupImage] = React.useState(false)\n    const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\n\n    const [selectedCard, setSelectedCard] = React.useState(null)\n    const [currentUser, setCurrentUser] = React.useState({})\n    const [cards, setCards] = React.useState([])\n    const [deletedCard, setDeletedCard] = React.useState(null)\n\n    React.useEffect(() => {\n        Promise.all([api.getUserData(), api.getInitialCards()])\n            .then(([UserData, InitialCards]) => {\n                setCurrentUser(UserData)\n                setCards(InitialCards)\n            })\n            .catch((error) => console.error(error))\n    }, []);\n\n    function handleEditProfileClick() {\n        setIsOpenPopupProfile(true)\n        document.addEventListener('keydown', handleEscClose);\n    }\n\n    function handleAddPlaceClick() {\n        setIsOpenPopupPlace(true)\n        document.addEventListener(\"keydown\", handleEscClose);\n    }\n\n    function handleEditAvatarClick() {\n        setIsOpenPopupAvatar(true)\n        document.addEventListener(\"keydown\", handleEscClose);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card)\n        setIsOpenPopupImage(true)\n        document.addEventListener(\"keydown\", handleEscClose);\n    }\n\n    function handleDeleteClick(card) {\n        setIsConfirmPopupOpen(true)\n        setDeletedCard(card)\n        document.addEventListener(\"keydown\", handleEscClose);\n    }\n\n    function handleOverlayClose(evt) {\n        if (evt.target.classList.contains(\"popup_is-opened\")) {\n            closeAllPopups()\n        }\n    }\n\n    function handleEscClose(evt) {\n        if (evt.key === \"Escape\") {\n            closeAllPopups()\n        }\n    }\n\n    function closeAllPopups() {\n        setIsOpenPopupProfile(false)\n        setIsOpenPopupPlace(false)\n        setIsOpenPopupAvatar(false)\n        setIsOpenPopupImage(false)\n        setIsConfirmPopupOpen(false)\n        setSelectedCard(null)\n\n        document.removeEventListener(\"keydown\", handleEscClose);\n    }\n\n    function handleUpdateProfile(data) {\n        api.getUserData(data)\n            .then(() => {\n                setCurrentUser({...currentUser, ...data})\n                closeAllPopups()\n            })\n            .catch((error) => console.error(error))\n    }\n\n    function handleAddNewCard(card) {\n        api.addNewPlace(card)\n            .then((newCard) => {\n                setCards([newCard, ...cards])\n                closeAllPopups()\n            })\n            .catch((error) => console.error(error))\n    }\n\n    function handleUpdateAvatar(data) {\n        api.updateUserAvatar(data)\n            .then(() => {\n                setCurrentUser({...currentUser, ...data})\n                closeAllPopups()\n            })\n            .catch((error) => console.error(error))\n    }\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id)\n\n        api.putLike(card._id, isLiked)\n            .then((newCard) => {\n                const newCards = cards.map((c) => c._id === card._id ? newCard : c)\n                setCards(newCards)\n            })\n            .catch((error) => console.error(error))\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                const newCards = cards.filter((c) => c._id !== card._id)\n                setCards(newCards)\n                setDeletedCard({})\n                closeAllPopups()\n            })\n            .catch((error) => console.error(error))\n    }\n\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"page\">\n                <Header />\n                <Main\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onEditAvatar={handleEditAvatarClick}\n                    onCardClick={handleCardClick}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleDeleteClick}\n                    cards={cards}\n                />\n                <Footer />\n\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateProfile}\n                    onClick={handleOverlayClose}\n                    title=\"Редактировать профиль\"\n                    captionButton=\"Сохранить\"\n                    popupName=\"profile\"\n                    formName=\"profile\"\n                />\n\n                <AddPlacePopup \n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddNewCard}\n                    onClick={handleOverlayClose}\n                    title=\"Новое место\"\n                    captionButton=\"Создать\"\n                    popupName=\"gallery\"\n                    formName=\"gallery\"\n                />\n\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                    onClick={handleOverlayClose}\n                    title=\"Обновить аватар\"\n                    captionButton=\"Сохранить\"\n                    popupName=\"avatar\"\n                    formName=\"avatar\"\n                />\n\n                <ImagePopup \n                    card={selectedCard}\n                    isOpen={isImagePopupOpen}\n                    onClose={closeAllPopups}\n                    onClick={handleOverlayClose}\n                />\n                \n                <ConfirmPopup \n                    isOpen={isConfirmPopupOpen}\n                    onClose={closeAllPopups}\n                    onCardDelete={handleCardDelete}\n                    onClick={handleOverlayClose}\n                    card={deletedCard}\n                />\n                    \n            </div>\n        </CurrentUserContext.Provider>\n    )\n  }\n  \n  export default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./components/App.js\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}